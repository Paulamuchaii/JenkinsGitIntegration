pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Stage 1: Build'
                    echo 'Task: Compile and package the code.'
                    echo 'Tool: Maven (or Gradle)'
                }
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo 'Stage 2: Unit and Integration Tests'
                    echo 'Task: Run unit tests to validate the code functions as expected and integration tests to ensure components work together.'
                    echo 'Tools: JUnit for unit testing, Selenium or TestNG for integration testing'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                script {
                    echo 'Stage 3: Code Analysis'
                    echo 'Task: Analyze the code to ensure it meets industry standards.'
                    echo 'Tool: SonarQube for static code analysis'
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    echo 'Stage 4: Security Scan'
                    echo 'Task: Perform a security scan to identify vulnerabilities.'
                    echo 'Tool: OWASP Dependency-Check or Snyk for security scanning'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                script {
                    echo 'Stage 5: Deploy to Staging'
                    echo 'Task: Deploy the application to a staging environment.'
                    echo 'Tool: AWS CLI or Jenkins SSH plugin for deployment'
                }
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo 'Stage 6: Integration Tests on Staging'
                    echo 'Task: Run integration tests on the staging environment to ensure the application functions as expected.'
                    echo 'Tools: Same as in the Unit and Integration Tests stage'
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    echo 'Stage 7: Deploy to Production'
                    echo 'Task: Deploy the application to the production environment.'
                    echo 'Tool: AWS CLI, Ansible, or Jenkins SSH plugin for deployment'
                }
            }
        }
    }

    post {
        success {
            emailext (
                subject: "Jenkins Pipeline: SUCCESS",
                body: "The Jenkins pipeline has completed successfully.",
                to: "muchaipaula@gmail.com",
                attachLog: true
            )
        }
        failure {
            emailext (
                subject: "Jenkins Pipeline: FAILURE",
                body: "The Jenkins pipeline has failed. Please check the logs.",
                to: "muchaipaula@gmail.com",
                attachLog: true
            )
        }
        always {
            echo 'Pipeline finished.'
        }
    }
}
